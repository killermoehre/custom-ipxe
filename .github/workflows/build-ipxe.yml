---
name: build-iPXE
on:
    push:
        branches: [master]
    pull_request:
        branches: [master]
    schedule:
        - cron: 35 01 * * *

jobs:
    build:
        runs-on: ubuntu-20.04
        strategy:
            matrix:
                binary: ['bin/undionly.kpxe', 'bin-x86_64-efi/ipxe.efi']
        steps:
            - name: Get latest ipxe/ipxe tag json from API
              uses: JamesIves/fetch-api-data-action@1.0.15
              with:
                  ENDPOINT: https://api.github.com/repos/ipxe/ipxe/tags
                  SAVE_NAME: ipxe-ipxe-tags
            - name: Get old ipxe/ipxe tag from artifact
              uses: actions/download-artifact@v2.0.5
              with:
                  name: old-ipxe-ipxe-tag.json
              continue-on-error: true
            - name: Extract latest version tag from ipxe/ipxe json
              run: |
                  TAG="$(jq -r '.[0].name' fetch-api-data-action/ipxe-ipxe-tags.json)"
                  echo "::debug::OLD_TAG=$TAG"
                  echo "::set-env name=ipxe-ipxe-tag::${TAG}"
            - name: Extract old version tag from artifact
              run: |
                  if [[ -e old-ipxe-ipxe-tags.json ]]; then
                      TAG="$(jq -r '.[0].name' old-ipxe-ipxe-tags.json)"
                  else
                      TAG="v0.0.0"
                  fi
                  echo "::debug::NEW_TAG=$TAG"
                  echo "::set-env name=old-ipxe-ipxe-tag::${TAG}"
            - name: Compare old and new ipxe/ipxe tag
              env:
                  OLD_TAG: ${{ env.old-ipxe-ipxe-tag }}
                  NEW_TAG: ${{ env.ipxe-ipxe-tag }} 
              run: |
                  if [[ "$OLD_TAG" == "$NEW_TAG" ]]; then
                      NEW_RELEASE='false'
                  else
                      NEW_RELEASE='true'
                  fi
                  echo "::debug::NEW_RELEASE=$NEW_RELEASE"
                  echo "::set-env name=new-release::$NEW_RELEASE"
            - name: Create todays tag
              run: printf '::set-env name=current-tag::%(%Y-%m-%d)T\n' '-1'
              if: env.new-release
            - name: Install Build Dependencies
              run: >
                  sudo
                  apt-get install -y
                  binutils-dev
                  liblzma-dev
                  syslinux
                  genisoimage
                  jq
                  tree
              if: env.new-release
            - name: Checkout ${{ github.repository }}
              uses: actions/checkout@v2
              with:
                  path: custom-ipxe
            - name: Checkout ipxe/ipxe
              uses: actions/checkout@v2
              with:
                  repository: ipxe/ipxe
                  ref: ${{ env.ipxe-ipxe-tag }}
                  path: ipxe
              if: env.new-release
            - name: Put custom config into the build dir
              run: >
                  cp
                  custom-ipxe/general.h
                  ipxe/src/config/local/
            - name: Build iPXE ${{ matrix.binary }}
              env:
                  BINARY: ${{ matrix.binary }}
              run: make -C src "$BINARY"
              working-directory: ipxe
            - name: Get filename from ${{ matrix.binary }}
              env:
                  BINARY: ${{ matrix.binary }}
              run: echo "::set-env name=filename::${BINARY##*/}"
              if: env.new-release
            - name: Make release
              uses: eine/tip@master
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  files: ipxe/src/${{ matrix.binary }}
                  rm: true
                  snapshots: false
                  tag: ${{ env.current-tag }}
              if: env.new-release
            - name: Debug File Listing
              env:
                  ACTIONS_STEP_DEBUG: secrets.ACTIONS_STEP_DEBUG
              run: test "$ACTIONS_STEP_DEBUG" && tree
              if: ${{ env.new-release }}
            - name: Upload tag artifact
              uses: actions/upload-artifact@v2.1.4
              with:
                  name: old-ipxe-ipxe-tags.json
                  path: fetch-api-data-action/ipxe-ipxe-tags.json
                  if-no-files-found: error
              if: env.new-release
